<!-- project build configuration -->
<project name="Game Gardens Server" default="all" basedir=".">

  <!-- load up our configuration information -->
  <property file="toybox.properties"/>

  <!-- things you probably don't want to change -->
  <property name="deploy.dir" value="dist"/>

  <!-- declare our subprojects and webapps -->
  <import file="etc/build-support.xml"/>
  <property name="projects" value="samskivert,narya,nenya,vilya"/>
  <property name="webapps"  value="gardens"/>

  <!-- declare the libraries needed by the main thing -->
  <fileset dir="." id="dist.libs">
    <include name="${extlib.dir}/ant.jar"/>
    <include name="${extlib.dir}/activation.jar"/>
    <include name="${extlib.dir}/commons-beanutils.jar"/>
    <include name="${extlib.dir}/commons-collections.jar"/>
    <include name="${extlib.dir}/commons-digester.jar"/>
    <include name="${extlib.dir}/commons-fileupload.jar"/>
    <include name="${extlib.dir}/commons-io.jar"/>
    <include name="${extlib.dir}/commons-lang.jar"/>
    <include name="${extlib.dir}/commons-logging.jar"/>
    <include name="${extlib.dir}/getdown.jar"/>
    <include name="${extlib.dir}/junit-3.7.jar"/>
    <include name="${extlib.dir}/mail.jar"/>
    <include name="${extlib.dir}/mysql-connector-java-3.1.12-bin.jar"/>
    <include name="${extlib.dir}/servlet-2.3.jar"/>
    <include name="${extlib.dir}/velocity-1.5-dev.jar"/>
    <include name="${extlib.dir}/threerings.jar"/> <!-- optional -->
    <include name="${libs.dir}/narya-base.jar"/>
    <include name="${libs.dir}/narya-distrib.jar"/>
    <include name="${libs.dir}/nenya-media.jar"/>
    <include name="${libs.dir}/nenya-rsrc.jar"/>
    <include name="${libs.dir}/samskivert.jar"/>
    <include name="${libs.dir}/vilya-micasa.jar"/>
    <include name="${libs.dir}/vilya-parlor.jar"/>
  </fileset>

  <!-- creates the Proguarded Java client -->
  <target name="client" depends="copydistlibs">
    <ant dir="projects/client" target="all" inheritAll="false"/>
  </target>

  <!-- signs the server jar files -->
  <target name="sign">
    <if><isset property="cert_dir"/><then>
      <!-- this contains the path to the keystore and the credentials -->
      <property file="${cert_dir}/certificate.properties"/>
      <signjar lazy="true" alias="${sign.alias}" keystore="${sign.keystore}"
               storepass="${sign.storepass}">
        <fileset dir="${deploy.dir}/lib" includes="*.jar"/>
        <fileset dir="${deploy.dir}" includes="*.jar"/>
      </signjar>
    </then><else>
      <echo>Not signing server code. No cert_dir configured.</echo>
    </else></if>
  </target>

  <!-- the default target is to install and sign the client -->
  <target name="all" depends="sign"/>

  <!-- ensures that a toybox.properties exists -->
  <target name="prepare" depends="copydistlibs">
    <if><not><isset property="webapp_dir"/></not>
    <then>
      <echo>Generating default toybox.properties.</echo>
      <copy tofile="toybox.properties" file="toybox.properties.dist"/>
    </then>
    </if>
    <copy file="toybox.properties" todir="${deploy.dir}"/>
  </target>

  <!-- build the server -->
  <target name="toybox" depends="prepare">
    <antcall target="distprojects">
      <param name="projects"  value="toybox"/>
      <param name="dest.dir"  value="${deploy.dir}"/>
    </antcall>
  </target>

  <!-- rebuilds all subprojects and the top-level application -->
  <target name="distall" depends="prepare,distprojects,toybox,webapps,client"/>

  <!-- fully cleans out the installed application and all subprojects -->
  <target name="cleanall" depends="cleanprojects">
    <ant dir="projects/client" target="clean" inheritAll="false"/>
    <delete dir="${deploy.dir}"/>
  </target>
</project>
