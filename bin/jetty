#!/bin/sh  
#
# $Id$
#
# Startup script for jetty. Swiped from FreeBSD's Jetty port and heavily
# modified.

usage()
{
    echo "Usage: $0 {start|stop|restart|check|supervise} [ CONFIGS ... ] "
    exit 1
}

[ $# -gt 0 ] || usage

TMPJ=/tmp/j$$

# Get the action & configs
ACTION=$1
shift
ARGS="$*"
CONFIGS=""

# Find directory function
findDirectory()
{
    OP=$1
    shift
    for L in $* ; do
        [ $OP $L ] || continue 
        echo $L
        break
    done 
}

# Locate our top-level directory
ROOT=`dirname $0 | sed s:/bin$::`

JETTY_HOME=$ROOT/jetty
JETTY_INSTALL_TRACE_FILE="lib/org.mortbay.jmx.jar"
JETTY_CONSOLE=$ROOT/logs/jetty-console.log

# Check that jetty is where we think it is
if [ ! -r $JETTY_HOME/$JETTY_INSTALL_TRACE_FILE ] 
then
   echo "** ERROR: Oops! Jetty doesn't appear to be installed in $JETTY_HOME"
   echo "** ERROR:  $JETTY_HOME/$JETTY_INSTALL_TRACE_FILE is not readable!"
   exit 1
fi


CONFIGS="${ROOT}/etc/jetty.xml"

# Find a location for the pid file
if [  -z "$JETTY_RUN" ] 
then
  JETTY_RUN=`findDirectory -w /var/run /usr/var/run /tmp`
fi

# Find a PID for the pid file
if [  -z "$JETTY_PID" ] 
then
  JETTY_PID="$JETTY_RUN/jetty-gardens.pid"
fi

JAVA_HOME=/usr/local/jdk1.5
JAVA=$JAVA_HOME/bin/java
JAVA_VERSION=`expr "$($JAVA -version 2>&1 | head -1)" : '.*1\.\([0-9]\)'`

# Build the classpath with Jetty's bundled libraries.
if [ $JAVA_VERSION -lt 4 ]
then
   CP=$(ls $JETTY_HOME/ext/*.jar $JETTY_HOME/lib/*.jar | \
      egrep -v org.mortbay.jetty.jar | \
      paste -s -d":" - )
else
   CP=$(ls $JETTY_HOME/ext/*.jar $JETTY_HOME/lib/*.jar | \
      egrep -v org.mortbay.jetty-jdk1.2.jar\|crimson.jar\|javax.xml.jaxp.jar | \
      paste -s -d":" - )
fi
[ "$CLASSPATH" != "" ] && CP=$CP:$CLASSPATH
[ -f $JAVA_HOME/lib/tools.jar ] && CP="$CP:$JAVA_HOME/lib/tools.jar"
CLASSPATH="$CP"

# Add jetty properties to Java VM options.
JAVA_OPTIONS="-Djava.awt.headless=true -Djetty.home=$JETTY_HOME -Dgardens.home=$ROOT"

# This is how the Jetty server will be started
RUN_CMD="$JAVA $JAVA_OPTIONS -cp $CLASSPATH org.mortbay.jetty.Server $CONFIGS"

# Do the action
case "$ACTION" in
  start)
        echo "Starting Jetty: "

        if [ -f $JETTY_PID ]
        then
            echo "Already Running!!"
            exit 1
        fi

        echo "STARTED Jetty `date`" >> $JETTY_CONSOLE

        nohup sh -c "exec $RUN_CMD >>$JETTY_CONSOLE 2>&1" >/dev/null &
        echo $! > $JETTY_PID
        echo "Jetty running pid="`cat $JETTY_PID`
        ;;

  stop)
        PID=`cat $JETTY_PID 2>/dev/null`
        echo "Shutting down Jetty: $PID"
        kill $PID 2>/dev/null
        sleep 2
        kill -9 $PID 2>/dev/null
        rm -f $JETTY_PID
        echo "STOPPED `date`" >>$JETTY_CONSOLE
        ;;

  restart)
        $0 stop $*
        sleep 2
        $0 start $*
        ;;

  supervise)
       #
       # Under control of daemontools supervise monitor which
       # handles restarts and shutdowns via the svc program.
       #
         exec $RUN_CMD
         ;;

  check)
        echo "Checking arguments to Jetty: "
        echo "JETTY_HOME     =  $JETTY_HOME"
        echo "JETTY_RUN      =  $JETTY_RUN"
        echo "JETTY_PID      =  $JETTY_PID"
        echo "JETTY_CONSOLE  =  $JETTY_CONSOLE"
        echo "CONFIGS        =  $CONFIGS"
        echo "JAVA_OPTIONS   =  $JAVA_OPTIONS"
        echo "JAVA           =  $JAVA"
        echo "CLASSPATH      =  $CLASSPATH"
        echo "RUN_CMD        =  $RUN_CMD"
        echo
        
        if [ -f $JETTY_RUN/jetty.pid ]
        then
            echo "Jetty running pid="`cat $JETTY_RUN/jetty.pid`
            exit 0
        fi
        exit 1
        ;;

*)
        usage
	;;
esac

exit 0


