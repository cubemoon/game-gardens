<?xml version="1.0" standalone="yes"?>
<!-- build configuration -->
<project name="toybox" default="compile" basedir=".">

  <!-- the base directory from which we get our bundles and jar files -->
  <property name="base.dir" value="../.."/>

  <!-- configuration parameters -->
  <property name="app.name"       value="toybox"/>
  <property name="deploy.dir"     value="dist"/>
  <property name="savedoc.dir"    value="docs"/>
  <property name="narya.home"     value="/export/yohoho/projects/narya"/>

  <!-- derived properties -->  
  <property name="javadoc.home"   value="${deploy.dir}/docs"/>
  <property name="classes.dir"    value="${deploy.dir}/classes"/>
  <property name="nartool.path"   value="${narya.home}/bin"/>
  <property name="java.libraries" value="${base.dir}/lib"/>

  <!-- declare our classpath -->
  <path id="classpath">
    <pathelement location="${classes.dir}"/>
    <fileset dir="lib" includesfile="lib/LIBS"/>
    <fileset dir="${java.libraries}" includesfile="lib/LIBS"/>
  </path>
  <property name="cp" refid="classpath"/>

  <!-- generates .java files for all .dobj files -->
  <target name="gendobj">
    <apply executable="${nartool.path}/gendobj"
      failonerror="true" parallel="true">
      <srcfile/>
      <fileset dir="src/java" includes="**/*.dobj"/>
    </apply>
  </target>

  <!-- declare a special classpath for genservice and genreceiver -->
  <path id="gen.classpath">
    <pathelement location="${classes.dir}"/>
    <pathelement location="lib/narya-distrib.jar"/>
    <pathelement location="lib/narya-base.jar"/>
    <pathelement location="${java.libraries}/narya-distrib.jar"/>
    <pathelement location="${java.libraries}/narya-base.jar"/>
  </path>
  <property name="genclasspath" refid="gen.classpath"/>

  <!-- generates marshaller and dispatcher classes for all invocation -->
  <!-- service declarations -->
  <target name="genservice">
    <apply executable="${nartool.path}/genservice"
      failonerror="true" parallel="true">
      <arg value="--classpath"/>
      <arg value="${genclasspath}"/>
      <arg value="--sourcedir"/>
      <arg value="src/java"/>
      <fileset dir="src/java" includes="**/*Service.java"/>
    </apply>
  </target>

  <!-- generates sender and decoder classes for all invocation -->
  <!-- receiver declarations -->
  <target name="genreceiver">
    <apply executable="${nartool.path}/genreceiver"
      failonerror="true" parallel="true">
      <arg value="--classpath"/>
      <arg value="${genclasspath}"/>
      <arg value="--sourcedir"/>
      <arg value="src/java"/>
      <fileset dir="src/java" includes="**/*Receiver.java"
        excludes="**/InvocationReceiver.java"/>
    </apply>
  </target>

  <!-- prepares the application directories -->
  <target name="prepare" depends="gendobj">
    <mkdir dir="${deploy.dir}"/>
    <mkdir dir="${classes.dir}"/>
    <mkdir dir="${classes.dir}/rsrc"/>
    <mkdir dir="${javadoc.home}"/>
    <copy todir="${classes.dir}">
      <fileset dir="src/java" includes="**/*.properties"/>
    </copy>
    <copy todir="${classes.dir}/rsrc">
      <fileset dir="rsrc" includes="**/*" excludes="**/bundles/**"/>
    </copy>
  </target>

  <!-- cleans out the installed application -->
  <target name="clean">
    <delete dir="${deploy.dir}"/>
  </target>

  <!-- build the java class files -->
  <target name="compile" depends="prepare">
    <javac srcdir="src/java" destdir="${classes.dir}"
           debug="on" optimize="{$build.optimize}" deprecation="on"
           includeAntRuntime="no">
      <classpath refid="classpath"/>
    </javac>
  </target>

  <!-- build the javadoc documentation -->
  <target name="javadoc" depends="prepare">
    <javadoc sourcepath="src/java"
             packagenames="com.threerings.*"
             destdir="${javadoc.home}"
             additionalparam="-breakiterator"
             link="http://dev.threerings.net/devel/docs/toybox/">
      <classpath refid="classpath"/>
      <link href="http://java.sun.com/j2se/1.4/docs/api/"/>
      <link href="http://dev.threerings.net/devel/docs/samskivert/"/>
    </javadoc>
    <copy todir="${javadoc.home}">
      <fileset dir="src/java" includes="**/*.png"/>
    </copy>
  </target>

  <!-- builds the javadocs and stuffs them in a directory where they -->
  <!-- won't be blown away when we do "clean" next time -->
  <target name="savedoc" depends="javadoc">
    <delete dir="${savedoc.dir}/api"/>
    <copy todir="${savedoc.dir}/api">
      <fileset dir="${javadoc.home}" includes="**/*"/>
    </copy>
  </target>

  <!-- a target for rebuilding everything -->
  <target name="all" depends="clean,prepare,compile,javadoc,dist"/>

  <!-- builds our distribution files (war and jar) -->
  <target name="dist" depends="prepare,compile">
    <jar destfile="${deploy.dir}/${app.name}.jar"
         basedir="${deploy.dir}/classes"/>
  </target>
</project>
